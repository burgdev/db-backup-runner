[project]
name = "db-backup-runner"
version = "0.1.1"
description = "Run any db backups (and others) from inside its own docker container"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
  "click>=8.1.7",
  "docker>=7.1.0",
  "loguru>=0.7.3",
  "python-cron",
  "python-dotenv>=1.0.1",
  "requests>=2.32.3",
  "tqdm>=4.67.1",
]

[tool.docker]
registry = "ghcr.io/burgdev"

[dependency-groups]
dev = [
  "deptry>=0.21.1",
  "environs>=11.2.1",
  "humanize>=4.11.0",
  "invoke>=2.2.0",
  "pre-commit>=4.0.1",
  "pyright>=1.1.390",
  "pytest>=8.3.4",
  "python-on-whales>=0.74.0",
  "rich>=13.9.4",
  "rooster-blue>=0.0.8",
  "ruff>=0.8.2",
  "types-requests>=2.32.0.20241016",
]


[tool.uv.sources]
# Use an unreleased version to support non-async jobs
# https://github.com/whdev1/pycron/pull/1
python-cron = { git = "https://github.com/whdev1/pycron", rev = "e40f465940f1632b753b75c819364b20ed85e1ca" }


[tool.poe.tasks]
check = [
  { cmd = "uv run ruff check ." },
  { cmd = "uv run ruff format --diff ." },
  { cmd = "uv run pyright" },
]
test = "uv run pytest tests/"
stage-release = "python3 ./scripts/stage-release --output staged-release.zip"
format-code = [{ cmd = "uv run ruff format ." }]
# Similar to check, but also auto fixes issues.
auto-check = [
  { cmd = "uv run ruff check --fix ." },
  { cmd = "uv run ruff format ." },
  { cmd = "uv run pyright" },
]
prcheck = ["check", "test"]


[project.scripts]
db-backup-runner = "db_backup_runner:cli"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-third-party = ["db_backup_runner"]

[tool.deptry.per_rule_ignores]
DEP001 = ["_logger", "_env", "project", "check"] # only for invoke
DEP004 = [
  "rich",
  "icecream",
  "invoke",
  "environs",
  "humanize",
  "python_on_whales",
] # only in dev
DEP003 = ["db_backup_runner"] # transitive dependencies
#DEP002 = ["types-xmltodict", "types-python-slugify"] # not used

[tool.rooster]
major_labels = []                                            # We do not use the major version number yet
minor_labels = ["release:breaking"]
changelog_ignore_labels = ["release:ignore", "type:tooling"]
"changelog_sections.release.breaking" = "Breaking changes"
"changelog_sections.type:feature" = "Enhancements"
"changelog_sections.type:bug" = "Bug fixes"
"changelog_sections.type:docu" = "Documentation"
"changelog_sections.type:others" = "Other changes"
changelog_sections.__unknown__ = "Other changes"
version_tag_prefix = "v"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
