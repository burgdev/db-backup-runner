[project]
name = "db-backup-runner"
version = "0.1.2"
description = "Run any db backups (and others) from inside its own docker container"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
  "click>=8.1.7",
  "docker>=7.1.0",
  "loguru>=0.7.3",
  "python-cron",
  "python-dotenv>=1.0.1",
  "requests>=2.32.3",
  "tqdm>=4.67.1",
]

[tool.docker]
registry = "ghcr.io/burgdev"

[dependency-groups]
dev = [
  "deptry>=0.21.1",
  "environs>=11.2.1",
  "git-cliff>=2.7.0",
  "humanize>=4.11.0",
  "invoke>=2.2.0",
  "pre-commit>=4.0.1",
  "pyright>=1.1.390",
  "pytest>=8.3.4",
  "python-on-whales>=0.74.0",
  "rich>=13.9.4",
  "rooster-blue>=0.0.8",
  "ruff>=0.8.2",
  "types-requests>=2.32.0.20241016",
]


[tool.uv.sources]
# Use an unreleased version to support non-async jobs
# https://github.com/whdev1/pycron/pull/1
python-cron = { git = "https://github.com/whdev1/pycron", rev = "e40f465940f1632b753b75c819364b20ed85e1ca" }


[tool.poe.tasks]
check = [
  { cmd = "uv run ruff check ." },
  { cmd = "uv run ruff format --diff ." },
  { cmd = "uv run pyright" },
]
test = "uv run pytest tests/"
stage-release = "python3 ./scripts/stage-release --output staged-release.zip"
format-code = [{ cmd = "uv run ruff format ." }]
# Similar to check, but also auto fixes issues.
auto-check = [
  { cmd = "uv run ruff check --fix ." },
  { cmd = "uv run ruff format ." },
  { cmd = "uv run pyright" },
]
prcheck = ["check", "test"]


[project.scripts]
db-backup-runner = "db_backup_runner:cli"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-third-party = ["db_backup_runner"]

[tool.deptry.per_rule_ignores]
DEP001 = ["_logger", "_env", "project", "check"] # only for invoke
DEP004 = [
  "rich",
  "icecream",
  "invoke",
  "environs",
  "humanize",
  "python_on_whales",
] # only in dev
DEP003 = ["db_backup_runner"] # transitive dependencies
#DEP002 = ["types-xmltodict", "types-python-slugify"] # not used

[tool.rooster]
major_labels = []                                            # We do not use the major version number yet
minor_labels = ["release:breaking"]
changelog_ignore_labels = ["release:ignore", "type:tooling"]
"changelog_sections.release:breaking" = "Breaking changes"
"changelog_sections.type:feature" = "Enhancements"
"changelog_sections.type:bug" = "Bug fixes"
"changelog_sections.type:docu" = "Documentation"
"changelog_sections.type:others" = "Other changes"
changelog_sections.__unknown__ = "Other changes"
changelog_sections.breaking = "Breaking changes"
version_tag_prefix = "v"

[tool.bump]
initial_tag = "v0.1.1"


[tool.git-cliff.remote.github]
owner = "burgdev"
repo = "db-backup-runner"

[tool.git-cliff.git]
tag_pattern = "^v[0-9]+\\.[0-9]+\\.[0-9]+"
#tag_pattern = "v.*"
conventional_commits = false
filter_unconventional = false
#topo_order = true
commit_parsers = [
  { field = "github.pr_labels", pattern = "release:breaking", group = "üèóÔ∏è Breaking changes" },
  { field = "github.pr_labels", pattern = "type:feature", group = "üöÄ Features" },
  { field = "github.pr_labels", pattern = "type:bug", group = "üêõ Fixes" },
  { field = "github.pr_labels", pattern = "type:update", group = "üß™ Dependencies" },
  { field = "github.pr_labels", pattern = "type:refactor", group = "üè≠ Refactor" },
  { field = "github.pr_labels", pattern = "type:docu", group = "üìù Documentation" },
  { field = "github.pr_labels", pattern = "type:others", group = "üåÄ Miscellaneous" },
  { field = "github.pr_labels", pattern = "release:ignore", group = "üêõ Ignores" },
  { field = "github.pr_labels", pattern = ".*", skip = true },
]

commit_preprocessors = [{ pattern = ' \(#[0-9]+\)$', replace = " " }]

[tool.git-cliff.changelog]
render_always = true
# template for the changelog header
header = """
# Changelog\n
All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n
"""
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}

{% if version -%}
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else -%}
    ## [Unreleased]
{% endif -%}

{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {%- for commit in commits %}
        - {{ commit.message | split(pat="\n") | first | upper_first | trim }}\
            {% if commit.remote.pr_number %}\
            [#{{ commit.remote.pr_number }}]({{ self::remote_url() }}/pull/{{ commit.remote.pr_number }}) \
            {%- endif -%}
    {% endfor %}
{% endfor %}
"""
footer = """
{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}

{% for release in releases -%}
    {% if release.version -%}
        {% if release.previous.version -%}
            [{{ release.version | trim_start_matches(pat="v") }}]: \

                {{ self::remote_url() }}/compare/{{ release.previous.version }}..{{ release.version }}
        {% endif -%}
    {% else -%}
        [unreleased]: {{ self::remote_url() }}/compare/{{ release.previous.version }}..HEAD
    {% endif -%}
{% endfor %}
""" # template for the changelog footer
# remove the leading and trailing whitespace from the templates
trim = true


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
