[project]
name = "db-backup-runner"
version = "0.1.2"
description = "Run any db backups (and others) from inside its own docker container"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
  "click>=8.1.7",
  "docker>=7.1.0",
  "loguru>=0.7.3",
  "python-cron",
  "python-dotenv>=1.0.1",
  "requests>=2.32.3",
  "tqdm>=4.67.1",
]

[tool.docker]
registry = "ghcr.io/burgdev"

[dependency-groups]
dev = [
  "deptry>=0.21.1",
  "environs>=11.2.1",
  "git-cliff>=2.7.0",
  "humanize>=4.11.0",
  "invoke>=2.2.0",
  "pre-commit>=4.0.1",
  "pyright>=1.1.390",
  "pytest>=8.3.4",
  "python-on-whales>=0.74.0",
  "rich>=13.9.4",
  "rooster-blue>=0.0.8",
  "ruff>=0.8.2",
  "types-requests>=2.32.0.20241016",
]


[tool.uv.sources]
# Use an unreleased version to support non-async jobs
# https://github.com/whdev1/pycron/pull/1
python-cron = { git = "https://github.com/whdev1/pycron", rev = "e40f465940f1632b753b75c819364b20ed85e1ca" }


[project.scripts]
db-backup-runner = "db_backup_runner:cli"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-third-party = ["db_backup_runner"]

[tool.deptry.per_rule_ignores]
DEP001 = ["_logger", "_env", "project", "check"] # only for invoke
DEP004 = [
  "rich",
  "icecream",
  "invoke",
  "environs",
  "humanize",
  "python_on_whales",
] # only in dev
DEP003 = ["db_backup_runner"] # transitive dependencies
#DEP002 = ["types-xmltodict", "types-python-slugify"] # not used

# git-cliff settings
# https://git-cliff.org

#[tool.git-cliff.bump]
#initial_tag = "v0.1.1"
#
#[tool.git-cliff.remote.github]
#owner = "burgdev"
#repo = "db-backup-runner"
#
#[tool.git-cliff.git]
#tag_pattern = "^v[0-9]+\\.[0-9]+\\.[0-9]+"
#sort_commits = "newest"
#conventional_commits = false
#filter_unconventional = false
##topo_order = true
#commit_parsers = [
#  { field = "github.pr_labels", pattern = "release:breaking", group = "🏗️ Breaking changes" },
#  { field = "github.pr_labels", pattern = "type:feature", group = "🚀 Features" },
#  { field = "github.pr_labels", pattern = "type:bug", group = "🐛 Fixes" },
#  { field = "github.pr_labels", pattern = "type:refactor", group = "🏭 Refactor" },
#  { field = "github.pr_labels", pattern = "type:docu", group = "📝 Documentation" },
#  { field = "github.pr_labels", pattern = "type:update", group = "🧪 Dependencies" },
#  { field = "github.pr_labels", pattern = "type:others", group = "🌀 Miscellaneous" },
#  #{ field = "github.pr_labels", pattern = "type:tooling", group = "🌀 Miscellaneous", default_scope = "Tooling" },
#  { field = "github.pr_labels", pattern = ".*", skip = true },
#]
#
## remove last added merged requests, they are added below again (with url).
#commit_preprocessors = [{ pattern = '\.?\s*\(#[0-9]+\)$', replace = "" }]
#
#[tool.git-cliff.changelog]
## template for the changelog header
## https://keats.github.io/tera/docs/#introduction
#header = """
## Changelog\n
#All notable changes to this project will be documented in this file.
#
#The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
#and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n
#"""
#body = """
#{%- macro remote_url() -%}
#  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
#{%- endmacro -%}
#
#{% if version -%}
#    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
#{% else -%}
#    ## [Unreleased]
#{% endif -%}
#
#{% for group, commits in commits | group_by(attribute="group") %}
#    ### {{ group | upper_first }}
#    {%- for commit in commits %}
#        - {{ commit.remote.pr_title | split(pat="\n") | first | upper_first | trim }}\
#            {% if commit.remote.pr_number %}\
#            {# #} ([#{{ commit.remote.pr_number }}]({{ self::remote_url() }}/pull/{{ commit.remote.pr_number }})) \
#            {%- endif -%}
#    {% endfor %}
#{% endfor %}
#{# #}\n
#"""
#footer = """
#{%- macro remote_url() -%}
#  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
#{%- endmacro -%}
#
#{% for release in releases -%}
#    {% if release.version -%}
#        {% if release.previous.version -%}
#            [{{ release.version | trim_start_matches(pat="v") }}]: \
#
#                {{ self::remote_url() }}/compare/{{ release.previous.version }}..{{ release.version }}
#        {% endif -%}
#    {% else -%}
#        [unreleased]: {{ self::remote_url() }}/compare/{{ release.previous.version }}..HEAD
#    {% endif -%}
#{% endfor %}
#[0.1.1]: {{ self::remote_url() }}/releases/tag/v0.1.1
#
#"""
## remove the leading and trailing whitespace from the templates
#trim = true
#

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
